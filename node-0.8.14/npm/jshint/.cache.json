{"_id":"jshint","_rev":"105-e4dd78f5ae8d8e40092c5f42f2294bd9","name":"jshint","description":"A CLI for JSHint","dist-tags":{"latest":"0.9.1"},"versions":{"0.1.8":{"name":"jshint","version":"0.1.8","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"main":"./packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","lib","bin","package.json"],"dependencies":{"argsparser":">=0.0.3"},"_id":"jshint@0.1.8","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"0.3.17","_nodeVersion":"v0.4.2","directories":{"lib":"./lib","bin":"./bin"},"bin":{"jshint":"bin/jshint"},"_defaultsLoaded":true,"dist":{"shasum":"d90e12dccb1bc490409a079defa01e21ee16a6e8","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.1.8.tgz"}},"0.1.9":{"name":"jshint","version":"0.1.9","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"main":"./packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","lib","bin","package.json"],"dependencies":{"argsparser":">=0.0.3"},"_id":"jshint@0.1.9","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"0.3.17","_nodeVersion":"v0.4.2","directories":{"lib":"./lib","bin":"./bin"},"bin":{"jshint":"bin/jshint"},"_defaultsLoaded":true,"dist":{"shasum":"4ec9f0415c6746021de4b7eb5a3ca1a3ed7f33a7","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.1.9.tgz"}},"0.2.0":{"name":"jshint","version":"0.2.0","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"main":"./packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","lib","bin","package.json"],"dependencies":{"argsparser":">=0.0.3"},"_id":"jshint@0.2.0","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"0.3.17","_nodeVersion":"v0.4.2","directories":{"lib":"./lib","bin":"./bin"},"bin":{"jshint":"bin/jshint"},"_defaultsLoaded":true,"dist":{"shasum":"0c63f41429bb1a764ce5936f7aaaf806b771d947","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.2.0.tgz"}},"0.2.1":{"name":"jshint","version":"0.2.1","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP"],"dependencies":{"argsparser":">=0.0.3"},"devDependencies":{},"_id":"jshint@0.2.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.6","_nodeVersion":"v0.4.7","_defaultsLoaded":true,"dist":{"shasum":"c8589746ff9750d89c4b9e3a0996a9f81b6493bc","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.2.1.tgz"},"scripts":{},"directories":{}},"0.2.2":{"name":"jshint","version":"0.2.2","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint"],"dependencies":{"argsparser":">=0.0.3"},"_npmJsonOpts":{"file":"/Users/isaacs/.npm/jshint/0.2.2/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"jshint@0.2.2","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.13","_nodeVersion":"v0.5.0-pre","_defaultsLoaded":true,"dist":{"shasum":"77091e70ea88bc28904d8e0e7ae2c45b638b477a","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.2.2.tgz"},"scripts":{},"directories":{}},"0.2.3":{"name":"jshint","version":"0.2.3","description":"a cli for jshint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3"},"preferGlobal":true,"_npmJsonOpts":{"file":"/home/brent/.npm/jshint/0.2.3/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"jshint@0.2.3","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.15","_nodeVersion":"v0.4.8","_defaultsLoaded":true,"dist":{"shasum":"d31480ae27228f1c4a7267d521b85fcb9662e53e","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.2.3.tgz"},"scripts":{},"directories":{}},"0.3.0":{"name":"jshint","version":"0.3.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","glob":">=2.0.7"},"preferGlobal":true,"_npmJsonOpts":{"file":"/Users/brent/.npm/jshint/0.3.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"jshint@0.3.0","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"b011c63b3a805e80e03453768f5a399e02fe5bc0","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.3.0.tgz"},"scripts":{},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.3.1":{"name":"jshint","version":"0.3.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","glob":">=2.0.7"},"preferGlobal":true,"_npmJsonOpts":{"file":"/Users/brent/.npm/jshint/0.3.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"jshint@0.3.1","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.22","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"260df1eaaa6462becf1693da55e831fa87abcb69","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.3.1.tgz"},"scripts":{},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.4.0":{"name":"jshint","version":"0.4.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","glob":">=2.0.7","jasmine-node":"1.0.7"},"bundledDependencies":["argsparser","glob"],"preferGlobal":true,"_npmJsonOpts":{"file":"/Users/brent/.npm/jshint/0.4.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"jshint@0.4.0","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.27","_nodeVersion":"v0.4.11","_defaultsLoaded":true,"dist":{"shasum":"8349e2e7bb89147c8c8b47c8b1353d735af6dfeb","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.4.0.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.0":{"name":"jshint","version":"0.5.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","jasmine-node":"1.0.7","minimatch":">=0.0.4"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.0","bundleDependencies":["argsparser","minimatch"],"devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.93","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"a2351b0dbd7ba63f7b94da7d0769ac600e788fdd","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.0.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.1":{"name":"jshint","version":"0.5.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.99","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"3bc469d32d67e818055799cc2f7212a6f9b8d25a","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.1.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.2":{"name":"jshint","version":"0.5.2","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.2","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.99","_nodeVersion":"v0.4.12","_defaultsLoaded":true,"dist":{"shasum":"2db6c1b8597fd820ae161f60d77c9db12efe40b9","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.2.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.3":{"name":"jshint","version":"0.5.3","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.3","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.3","_defaultsLoaded":true,"dist":{"shasum":"7519c1c8d42eca0799f4f30e58b172ff806f5e78","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.3.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.4":{"name":"jshint","version":"0.5.4","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.4","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.3","_defaultsLoaded":true,"dist":{"shasum":"7660480d2a99fd693addbaeecb56ac5d6ad4e1e2","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.4.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.5":{"name":"jshint","version":"0.5.5","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.5","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-alpha-2","_nodeVersion":"v0.6.3","_defaultsLoaded":true,"dist":{"shasum":"f2a2a69ea0d159058cfd56a6bd481866e6d82a82","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.5.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.6":{"name":"jshint","version":"0.5.6","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.6","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-beta-10","_nodeVersion":"v0.6.7","_defaultsLoaded":true,"dist":{"shasum":"64ed3d3701d2becbd3f838b4d4280aef72731b2c","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.6.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag. \n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Custom Options\n\nSpecify custom lint options (see [example/config.json](https://github.com/jshint/node-jshint/blob/master/example/config.json)).\n\n    --config path/to/config.json\n\nNote: This bypasses any .jshintrc files.\n\n## Default Options\n\nThe CLI uses the default options that come with JSHint. However, if it locates a .jshintrc file in your home directory (~/) it will use those options first.\n\n## Per Directory Options\n\nIf there is a .jshintrc file in the current working directory, any of those options will take precedence over (or be merged with) any options found in the ~/.jshintrc file (if it exists).\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in the current working directory, then any directories or files will be skipped over.\n\nNote: Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"}],"directories":{}},"0.5.7":{"name":"jshint","version":"0.5.7","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"_id":"jshint@0.5.7","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.6.5","_defaultsLoaded":true,"dist":{"shasum":"d7944db46f3bb7baefea3d13f23c99a8cd5b753b","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.7.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.5.8":{"name":"jshint","version":"0.5.8","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"_id":"jshint@0.5.8","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"8ce1e5a237aa1d1d8957e6b048028dc26a3e22a8","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.8.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag. \n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Custom Options\n\nSpecify custom lint options (see [example/config.json](https://github.com/jshint/node-jshint/blob/master/example/config.json)).\n\n    --config path/to/config.json\n\nNote: This bypasses any .jshintrc files.\n\n## Default Options\n\nThe CLI uses the default options that come with JSHint. However, if it locates a .jshintrc file in your home directory (~/) it will use those options first.\n\n## Per Directory Options\n\nIf there is a .jshintrc file in the current working directory, any of those options will take precedence over (or be merged with) any options found in the ~/.jshintrc file (if it exists).\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in the current working directory, then any directories or files will be skipped over.\n\nNote: Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.5.9":{"name":"jshint","version":"0.5.9","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":">=0.0.3","minimatch":">=0.0.4"},"devDependencies":{"jasmine-node":"1.0.7"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.5.9","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.1","_nodeVersion":"v0.6.11","_defaultsLoaded":true,"dist":{"shasum":"ccb5ba9d2818dfe78857feaa71ccba0cb10aebc9","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.5.9.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Custom Options\n\nSpecify custom lint options (see [example/config.json](https://github.com/jshint/node-jshint/blob/master/example/config.json)).\n\n    --config path/to/config.json\n\nNote: This bypasses any .jshintrc files.\n\n## Default Options\n\nThe CLI uses the default options that come with JSHint. However, if it locates a .jshintrc file in your home directory (~/) it will use those options first.\n\n## Per Directory Options\n\nIf there is a .jshintrc file in the current working directory, any of those options will take precedence over (or be merged with) any options found in the ~/.jshintrc file (if it exists).\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in the current working directory, then any directories or files will be skipped over.\n\nNote: Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.6.0":{"name":"jshint","version":"0.6.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":"0.0.x","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.6.0","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.12","_nodeVersion":"v0.6.14","_defaultsLoaded":true,"dist":{"shasum":"38c95b34c825861cb7123f913cbcbe9091247d25","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.6.0.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory true) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.6.1":{"name":"jshint","version":"0.6.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":"0.0.x","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.6.1","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.12","_nodeVersion":"v0.6.14","_defaultsLoaded":true,"dist":{"shasum":"5b9e69b5867cb356e25d49d7a642a696207e46fa","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.6.1.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory true) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.6.2":{"name":"jshint","version":"0.6.2","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":"0.0.x","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.6.2","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.12","_nodeVersion":"v0.6.14","_defaultsLoaded":true,"dist":{"shasum":"b461612bf710df8d71d4274e04f5dcc7bee2a4d1","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.6.2.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory true) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.6.3":{"name":"jshint","version":"0.6.3","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"argsparser":"0.0.x","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"_id":"jshint@0.6.3","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"d07c254c928a842fbe92881ad3342c98bdd79530","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.6.3.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory true) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.7.0":{"name":"jshint","version":"0.7.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","HELP","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.7.0","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"4070f1ed3c13c154ce87eb4037593bbb5e4d9cd8","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.7.0.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\nThe command line interface looks like this.\n\n    jshint path path2 [options]\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory true) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.7.1":{"name":"jshint","version":"0.7.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"brentlintner","email":"brent.lintner@gmail.com"},"_id":"jshint@0.7.1","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.16","_nodeVersion":"v0.6.15","_defaultsLoaded":true,"dist":{"shasum":"7c62cdd1b260ec71743a9851ce79a9fc9d22ff15","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.7.1.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.7.2":{"name":"jshint","version":"0.7.2","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"_id":"jshint@0.7.2","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"35064bd9aef2798e56ae9e81962bdd3435151510","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.7.2.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.7.3":{"name":"jshint","version":"0.7.3","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"_id":"jshint@0.7.3","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.9","_defaultsLoaded":true,"dist":{"shasum":"a1920fe3d12401d36333955691e14e888796e218","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.7.3.tgz"},"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.8.0":{"name":"jshint","version":"0.8.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","_id":"jshint@0.8.0","dist":{"shasum":"19393131b1bdff8fadb94c104be8425e65fdade4","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.8.0.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.8.1":{"name":"jshint","version":"0.8.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. To have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","_id":"jshint@0.8.1","dist":{"shasum":"9bcaeb31a7fd3e799d4bea20be784724feeabead","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.8.1.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.8.2":{"name":"jshint","version":"0.8.2","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. \n\nOnly one extra option is unique to node-jshint: `globals` \nallows you to define an object of globals that get ignored for every file.\nTo see an example you can look at how whitelisted globals are defined\nin the [jshint code](https://github.com/jshint/jshint/blob/c047ea1b01097fcc220fcd1a55c41f67ae2e6e81/jshint.js#L556)\n\nTo have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","_id":"jshint@0.8.2","dist":{"shasum":"b49311dcbcf7c8cb8aa81319372959f201013191","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.8.2.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.9.0":{"name":"jshint","version":"0.9.0","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. \n\nOnly one extra option is unique to node-jshint: `globals` \nallows you to define an object of globals that get ignored for every file.\nTo see an example you can look at how whitelisted globals are defined\nin the [jshint code](https://github.com/jshint/jshint/blob/c047ea1b01097fcc220fcd1a55c41f67ae2e6e81/jshint.js#L556)\n\nTo have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","_id":"jshint@0.9.0","dist":{"shasum":"225022bdeb44ac608ce5773ebe01e020eef413c3","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.9.0.tgz"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}},"0.9.1":{"name":"jshint","version":"0.9.1","description":"A CLI for JSHint","homepage":"http://github.com/jshint/node-jshint","author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"bin":{"jshint":"./bin/hint"},"main":"packages/jshint/jshint","files":["packages/jshint/README.markdown","packages/jshint/jshint.js","README.md","LICENSE","bin/hint","lib"],"dependencies":{"cli":"0.4.3","minimatch":"0.0.x"},"devDependencies":{"jasmine-node":"1.0.x"},"preferGlobal":true,"readme":"# node-jshint\n\nA command line interface and npm package for jshint.\n\n## Install\n\nTo use jshint from any location (for npm v1.x) you need to install using the global (-g) flag.\n\n    npm install -g jshint\n\n## Usage\n\n    jshint -h\n\nYou can also require JSHint itself as a module.\n\n    var jshint = require('jshint');\n\nNote: If you are using npm v1.x be sure to install jshint locally (without the -g flag) or link it globally.\n\n## Text Editor Plugins\n\n* [gedit-node-jshint](https://github.com/niftylettuce/gedit-node-jshint) - Simply use CTRL+J in gedit to run JSHint using `node-jshint`.\n* [vim syntastic](https://github.com/scrooloose/syntastic) - Run node-jshint at each file save.\n* [sublime-jshint](https://github.com/uipoet/sublime-jshint) - `F7` or `command-B` on any .js file. `F4` next error line,column. `shift-F4` previous error line,column.\n\n## Custom Reporters\n\nSpecify a custom reporter module (see example/reporter.js).\n\n    --reporter path/to/reporter.js\n\nUse a jslint compatible xml reporter.\n\n    --jslint-reporter\n\nShow additional non-error data generated by jshint (unused globals etc).\n\n    --show-non-errors\n\n## Configuration Options\n\n**Note:** This behavior described below is very different from versions prior to `0.6`.\n\nThe CLI uses the default options that come with JSHint. \n\nOnly one extra option is unique to node-jshint: `globals` \nallows you to define an object of globals that get ignored for every file.\nTo see an example you can look at how whitelisted globals are defined\nin the [jshint code](https://github.com/jshint/jshint/blob/c047ea1b01097fcc220fcd1a55c41f67ae2e6e81/jshint.js#L556)\n\nTo have your own configuration apply, there are several methods you can use:\n\n### Specify Manually\n\nSetting the `--config=/path/to/your/config` command line option to specify your own configuration file outside of the directory tree for your project.\n\n### Within your Project's Directory Tree\n\nWhen the CLI is called, and a configuration file isn't specified already, `node-jshint` will attempt to locate one for you starting in `pwd`. (or \"present working directory\") If this does not yield a `.jshintrc` file, it will move one level up (`..`) the directory tree all the way up to the filesystem root. If a file is found, it stops immediately and uses that set of configuration.\n\nThis setup allows you to set up **one** configuration file for your entire project. (place it in the root folder) As long as you run `jshint` from anywhere within your project directory tree, the same configuration file will be used.\n\n### Home Directory\n\nIf all the methods above do not yield a `.jshintrc` to use, the last place that will be checked is your user's `$HOME` directory.\n\n## File Extensions\n\nDefault extension for files is \".js\". If you want to use JSHint with other file extensions (.json), you need to pass this extra extension as an option :\n\n    --extra-ext .json\n\n## Ignoring Files and Directories\n\nIf there is a .jshintignore file in your project's directory tree, (also provided you run `jshint` from within your project's directory) then any directories or files specified will be skipped over. (behaves just like a `.gitignore` file)\n\n**Note:** Pattern matching uses minimatch, with the nocase [option](https://github.com/isaacs/minimatch). When there is no match, it performs a left side match (when no forward slashes present and path is a directory).\n\n## Installing dependencies for development\n\n    ./configure\n\n## Build Commands\n\n    jake -T\n\n## Project Guidelines\n\n* All tests are passing.\n* No (new) JSHint errors are introduced.\n","_id":"jshint@0.9.1","dist":{"shasum":"ff32ec7f09f84001f7498eeafd63c9e4fbb2dc0e","tarball":"http://registry.npmjs.org/jshint/-/jshint-0.9.1.tgz"},"_npmVersion":"1.1.59","_npmUser":{"name":"antonkovalyov","email":"anton@kovalyov.net"},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"directories":{}}},"maintainers":[{"name":"brentlintner","email":"brent.lintner@gmail.com"},{"name":"antonkovalyov","email":"anton@kovalyov.net"}],"time":{"0.1.8":"2011-03-27T18:32:37.263Z","0.1.9":"2011-03-30T01:23:22.132Z","0.2.0":"2011-04-07T01:29:17.412Z","0.2.1":"2011-05-06T15:19:59.724Z","0.2.2":"2011-05-26T02:28:56.346Z","0.2.3":"2011-06-22T00:20:15.092Z","0.3.0":"2011-08-20T23:55:34.317Z","0.3.1":"2011-09-05T17:43:21.706Z","0.4.0":"2011-10-11T01:30:17.763Z","0.5.0":"2011-10-13T02:31:28.177Z","0.5.1":"2011-10-15T20:27:49.794Z","0.5.2":"2011-10-27T23:47:13.813Z","0.5.3":"2011-12-06T17:04:23.138Z","0.5.4":"2011-12-09T16:22:22.276Z","0.5.5":"2011-12-12T23:04:51.885Z","0.5.6":"2012-01-10T19:47:14.374Z","0.5.7":"2012-01-20T17:56:31.354Z","0.5.8":"2012-02-14T03:54:59.373Z","0.5.9":"2012-02-28T19:37:50.194Z","0.6.0":"2012-04-04T20:08:42.115Z","0.6.1":"2012-04-11T18:54:41.288Z","0.6.2":"2012-04-30T15:42:49.409Z","0.6.3":"2012-05-02T05:57:50.465Z","0.7.0":"2012-05-08T17:08:21.221Z","0.7.1":"2012-05-17T21:06:25.975Z","0.7.2":"2012-07-26T23:52:25.934Z","0.7.3":"2012-08-06T04:29:47.399Z","0.8.0":"2012-08-20T18:38:37.399Z","0.8.1":"2012-08-27T16:42:17.856Z","0.8.2":"2012-08-30T16:06:24.563Z","0.9.0":"2012-09-03T22:09:34.078Z","0.9.1":"2012-09-25T19:05:55.651Z"},"author":{"name":"Brent Lintner","email":"brent.lintner@gmail.com","url":"http://github.com/brentlintner"},"users":{"mvolkmann":true,"soldair":true,"danielr":true,"fgribreau":true,"pid":true,"graemef":true,"gillesruppert":true,"jgoodall":true,"tokuhirom":true,"m42am":true,"af":true},"_etag":"\"ADTYE7AP2HFZJ6D5LURAV5BT5\""}