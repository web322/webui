{"_id":"prettyjson","_rev":"32-3af20ef44f12c11d347061b77017ad13","name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","dist-tags":{"latest":"0.7.1"},"versions":{"0.0.1":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.0.1","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":"~v0.4.5"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmJsonOpts":{"file":"/Users/rafeca/.npm/prettyjson/0.0.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"prettyjson@0.0.1","_engineSupported":true,"_npmVersion":"1.0.30","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"ddce6038b9ce3b7ab7ba99ebca3c8ab11eba046b","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.0.1.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.1.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.1.0","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":"~0.4.5"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmJsonOpts":{"file":"/Users/rafeca/.npm/prettyjson/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"prettyjson@0.1.0","_engineSupported":true,"_npmVersion":"1.0.30","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"82d37e006a392a56f4462beddd085b9254af5a63","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.1.0.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.1.1":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.1.1","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":"~0.4.5"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.1.1","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"d26a5bac7d9da65efc156b64c86b87431dbe1c83","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.1.1.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.1.2":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.1.2","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":"~0.4.5"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.1.2","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"dd1775a81bb78fc30025df305a4e94de7755f494","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.1.2.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.1.3":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.1.3","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":">= 0.4.1 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.1.3","_engineSupported":true,"_npmVersion":"1.0.104","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"bd5450abaed3adf53cf91bec844d62006be8e65b","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.1.3.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.1.4":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.1.4","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":">= 0.4.1 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.1.4","_engineSupported":true,"_npmVersion":"1.0.106","_nodeVersion":"v0.4.5","_defaultsLoaded":true,"dist":{"shasum":"b89cf70d9cedd01d66df377df828e80543a41a79","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.1.4.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.2.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.2.0","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":">= 0.4.1 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x","releasetools":"0.1.x","step":"0.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.2.0","contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"_engineSupported":true,"_npmVersion":"1.1.0-beta-4","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"a616ff92b92a54fd7bdead9487b831dc5f91a476","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.2.0.tgz"},"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nThe easiest way is by installing it from the `npm` repository:\n    \n    $ npm install prettyjson\n\nIf you'd prefer to install the latest master version of `prettyjson`, you can clone the GitHub source repository\nand then install it using `npm`:\n    \n    $ git clone \"https://github.com/rafeca/prettyjson.git\"\n    \n    $ npm install prettyjson/\n\n## How to use it\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n    \n    var prettyjson = require('prettyjson');\n    \n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n    \n    console.log(prettyjson.render(data));\n\nAnd will output:\n    \n![Example 1](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n    \n    var prettyjson = require('prettyjson');\n\n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n\n    console.log(prettyjson.render(data, {\n      keysColor: 'rainbow', \n      dashColor: 'magenta'\n    }));\n\nWill output something like:\n\n![Example 2](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n    \n    $ npm install --dev\n\nthen run the tests:\n    \n    $ npm test\n\n","maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.2.1":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.2.1","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"engines":{"node":">= 0.4.1 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x","releasetools":"0.1.x","step":"0.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.2.1","contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"_engineSupported":true,"_npmVersion":"1.1.0-beta-4","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"ea5464a120db2bcd6ac9d75f23b4967e995494e5","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.2.1.tgz"},"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nThe easiest way is by installing it from the `npm` repository:\n    \n    $ npm install prettyjson\n\nIf you'd prefer to install the latest master version of `prettyjson`, you can clone the GitHub source repository\nand then install it using `npm`:\n    \n    $ git clone \"https://github.com/rafeca/prettyjson.git\"\n    \n    $ npm install prettyjson/\n\n## How to use it\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n    \n    var prettyjson = require('prettyjson');\n    \n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n    \n    console.log(prettyjson.render(data));\n\nAnd will output:\n    \n![Example 1](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n    \n    var prettyjson = require('prettyjson');\n\n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n\n    console.log(prettyjson.render(data, {\n      keysColor: 'rainbow', \n      dashColor: 'magenta'\n    }));\n\nWill output something like:\n\n![Example 2](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n    \n    $ npm install --dev\n\nthen run the tests:\n    \n    $ npm test\n\n","maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.3.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.3.0","homepage":"https://github.com/rafeca/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x","releasetools":"0.1.x","step":"0.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.3.0","contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"_engineSupported":true,"_npmVersion":"1.1.0-beta-4","_nodeVersion":"v0.6.6","_defaultsLoaded":true,"dist":{"shasum":"72f315e2f99e7b33a19ec0e47e35f84a5ad70666","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.3.0.tgz"},"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nThe easiest way is by installing it from the `npm` repository:\n    \n    $ npm install prettyjson\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n    \n    $ prettyjson package.json\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n    \n    $ curl https://api.github.com/users/rafeca | prettyjson\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n    \n    var prettyjson = require('prettyjson');\n    \n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n    \n    console.log(prettyjson.render(data));\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n    \n    var prettyjson = require('prettyjson');\n\n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n\n    console.log(prettyjson.render(data, {\n      keysColor: 'rainbow', \n      dashColor: 'magenta'\n    }));\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n    \n    $ npm install --dev\n\nthen run the tests:\n    \n    $ npm test\n\n","maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.3.1":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.3.1","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/jasmine-node/bin/jasmine-node spec"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"jasmine-node":"1.0.x","releasetools":"0.1.x","step":"0.0.x"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.3.1","contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"9cbab5e4520567be5ea4a7525d59aaf322c47139","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.3.1.tgz"},"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nThe easiest way is by installing it from the `npm` repository:\n    \n    $ npm install prettyjson\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n    \n    $ prettyjson package.json\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n    \n    $ curl https://api.github.com/users/rafeca | prettyjson\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n    \n    var prettyjson = require('prettyjson');\n    \n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n    \n    console.log(prettyjson.render(data));\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n    \n    var prettyjson = require('prettyjson');\n\n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n\n    console.log(prettyjson.render(data, {\n      keysColor: 'rainbow', \n      dashColor: 'magenta'\n    }));\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n    \n    $ npm install --dev\n\nthen run the tests:\n    \n    $ npm test\n\n","maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.4.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.4.0","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"git://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/mocha/bin/mocha"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.7.0"},"dependencies":{"colors":"0.5.x"},"devDependencies":{"releasetools":"0.1.x","step":"0.0.x","mocha":"~0.12.0","should":"~0.5.1"},"_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"_id":"prettyjson@0.4.0","contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"optionalDependencies":{},"_engineSupported":true,"_npmVersion":"1.1.0-3","_nodeVersion":"v0.6.10","_defaultsLoaded":true,"dist":{"shasum":"ff69da55a975eaa8e0a9f3860689d129ac502e67","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.4.0.tgz"},"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nThe easiest way is by installing it from the `npm` repository:\n    \n    $ npm install prettyjson\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n    \n    $ prettyjson package.json\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n    \n    $ curl https://api.github.com/users/rafeca | prettyjson\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n    \n    var prettyjson = require('prettyjson');\n    \n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n    \n    console.log(prettyjson.render(data));\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n    \n    var prettyjson = require('prettyjson');\n\n    var data = {\n      username: 'rafeca',\n      url: 'https://github.com/rafeca',\n      twitter_account: 'https://twitter.com/rafeca',\n      projects: ['prettyprint', 'connfu']\n    };\n\n    console.log(prettyjson.render(data, {\n      keysColor: 'rainbow', \n      dashColor: 'magenta'\n    }));\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n    \n    $ npm install --dev\n\nthen run the tests:\n    \n    $ npm test\n\n","maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.5.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.5.0","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"https://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/mocha/bin/mocha"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 =< 0.7.12"},"dependencies":{"colors":"0.6.0-1"},"devDependencies":{"releasetools":"0.2.0","step":"0.0.5","mocha":"1.2.0","should":"0.6.3","jake":"0.3.3","jshint":"0.7.1"},"contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"}],"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install prettyjson\n```\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n    \nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data));\n```\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow', \n  dashColor: 'magenta'\n}));\n```\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n```bash\n$ npm install --dev\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nYou can check the package's [test coverage](http://rafeca.com/prettyjson/coverage.html) if you are one of those test paranoics","_id":"prettyjson@0.5.0","dist":{"shasum":"4de6f1c8c6b723d2dff4fe01ecd9c69be72566f4","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.5.0.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.6.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.6.0","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"https://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/mocha/bin/mocha"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.9.0"},"dependencies":{"colors":"0.6.0-1"},"devDependencies":{"releasetools":"0.3.0","step":"0.0.5","mocha":"1.2.2","should":"0.6.3","jake":"0.3.7","jshint":"0.7.1"},"contributors":[{"name":"Rafael de Oleza","email":"rafeca@gmail.com"},{"name":"Dave Eddy","email":"dave@daveeddy.com"}],"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install prettyjson\n```\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n### Customizing colors via command line\n\nNow it's possible to customize the colors of the output via environment variables, thanks to @bahamas10:\n\n```bash\n$  PRETTYJSON_KEYS=red PRETTYJSON_DASH=blue bin/prettyjson package.json\n```\n\nThe available options are `PRETTYJSON_KEYS`, `PRETTYJSON_DASH` and `PRETTYJSON_INDENT`.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n    \nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data));\n```\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow', \n  dashColor: 'magenta'\n}));\n```\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n```bash\n$ npm install --dev\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nYou can check the package's [test coverage](http://rafeca.com/prettyjson/coverage.html) if you are one of those test paranoics","_id":"prettyjson@0.6.0","dist":{"shasum":"56c3388a886ffb805c516ba6768752c831e43ea1","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.6.0.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.7.0":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.7.0","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"https://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/mocha/bin/mocha --reporter spec"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.9.0"},"dependencies":{"colors":"0.6.0-1"},"devDependencies":{"releasetools":"0.4.0","step":"0.0.5","mocha":"1.6.0","should":"1.2.0","jake":"0.5.5","jshint":"0.9.1"},"contributors":[{"name":"- Dave Eddy","email":"dave@daveeddy.com"},{"name":"- Rafael de Oleza","email":"rafeca@gmail.com"}],"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install prettyjson\n```\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n### Customizing colors via command line\n\nNow it's possible to customize the colors of the output via environment variables, thanks to @bahamas10:\n\n```bash\n$ PRETTYJSON_KEYS=red PRETTYJSON_DASH=blue prettyjson package.json\n```\n\nThe available options are `PRETTYJSON_KEYS`, `PRETTYJSON_DASH` and `PRETTYJSON_INDENT`.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n    \nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data));\n```\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow', \n  dashColor: 'magenta'\n}));\n```\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n```bash\n$ npm install --dev\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nYou can check the package's [test coverage](http://rafeca.com/prettyjson/coverage.html) if you are one of those test paranoics","_id":"prettyjson@0.7.0","dist":{"shasum":"860f1acf817eada18e00c81f5286cf690a301a7d","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.7.0.tgz"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}},"0.7.1":{"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"name":"prettyjson","description":"Package for formatting JSON data in a coloured YAML-style, perfect for CLI output","version":"0.7.1","homepage":"http://rafeca.com/prettyjson","keywords":["json","cli","formatting","colors"],"repository":{"type":"git","url":"https://github.com/rafeca/prettyjson.git"},"main":"./lib/prettyjson","scripts":{"test":"./node_modules/mocha/bin/mocha --reporter spec"},"bin":{"prettyjson":"./bin/prettyjson"},"engines":{"node":">= 0.6.0 < 0.9.0"},"dependencies":{"colors":"0.6.0-1"},"devDependencies":{"releasetools":"0.4.0","step":"0.0.5","mocha":"1.6.0","should":"1.2.0","jake":"0.5.5","jshint":"0.9.1"},"contributors":[{"name":"- Dave Eddy","email":"dave@daveeddy.com"},{"name":"- Rafael de Oleza","email":"rafeca@gmail.com"}],"readme":"# prettyjson [![Build Status](https://secure.travis-ci.org/rafeca/prettyjson.png)](http://travis-ci.org/rafeca/prettyjson)\n\nPackage for formatting JSON data in a coloured YAML-style, perfect for CLI output\n\n## How to install\n\nJust install it via NPM:\n\n```bash\n$ npm install prettyjson\n```\n\n## Using it (from the CLI)\n\nThis package installs a command line interface to render JSON data in a more convenient way. You can use the CLI\nin three different ways:\n\n**Decode a JSON file:** If you want to see the contents of a JSON file, just pass it as the first argument to the CLI:\n\n```bash\n$ prettyjson package.json\n```\n\n![Example 1](http://rafeca.com/prettyjson/images/example3.png)\n\n**Decode the stdin:** You can also pipe the result of a command (for example an HTTP request) to the CLI to see\nthe JSON result in a clearer way:\n\n```bash\n$ curl https://api.github.com/users/rafeca | prettyjson\n```\n\n![Example 2](http://rafeca.com/prettyjson/images/example4.png)\n\n**Decode random strings:** if you call the CLI with no arguments, you'll get a prompt where you can past JSON strings\nand they'll be automatically displayed in a clearer way:\n\n![Example 3](http://rafeca.com/prettyjson/images/example5.png)\n\nIf you install the package globally (with `npm install -g prettyjson`), the CLI will be installed automatically in your PATH\nthanks to npm.\n\n### Customizing colors via command line\n\nNow it's possible to customize the colors of the output via environment variables, thanks to @bahamas10:\n\n```bash\n$ PRETTYJSON_KEYS=red PRETTYJSON_DASH=blue prettyjson package.json\n```\n\nThe available options are `PRETTYJSON_KEYS`, `PRETTYJSON_DASH` and `PRETTYJSON_INDENT`.\n\n## Using it (from Node.js)\n\nIt's pretty easy to use it... you just have to include it in your script and call the `render()` method:\n\n```javascript\nvar prettyjson = require('prettyjson');\n    \nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data));\n```\n\nAnd will output:\n    \n![Example 4](http://rafeca.com/prettyjson/images/example1.png)\n\nYou can also configure the colors of the hash keys and array dashes\n(using [colors.js](https://github.com/Marak/colors.js) colors syntax):\n\n```javascript\nvar prettyjson = require('prettyjson');\n\nvar data = {\n  username: 'rafeca',\n  url: 'https://github.com/rafeca',\n  twitter_account: 'https://twitter.com/rafeca',\n  projects: ['prettyprint', 'connfu']\n};\n\nconsole.log(prettyjson.render(data, {\n  keysColor: 'rainbow', \n  dashColor: 'magenta'\n}));\n```\n\nWill output something like:\n\n![Example 5](http://rafeca.com/prettyjson/images/example2.png)\n\n## Annotated source\n\nYou can check the [annotated source](http://rafeca.com/prettyjson/prettyjson.html) for more information about how it works\n\n## Running Tests\n\nTo run the test suite first invoke the following command within the repo, installing the development dependencies:\n\n```bash\n$ npm install --dev\n```\n\nthen run the tests:\n\n```bash\n$ npm test\n```\n\nYou can check the package's [test coverage](http://rafeca.com/prettyjson/coverage.html) if you are one of those test paranoics","readmeFilename":"README.md","_id":"prettyjson@0.7.1","dist":{"shasum":"2c38eeaa15e4b6adb03ebbe662402d1ea239c5c3","tarball":"http://registry.npmjs.org/prettyjson/-/prettyjson-0.7.1.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"rafeca","email":"rafeca@gmail.com"},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"directories":{}}},"maintainers":[{"name":"rafeca","email":"rafeca@gmail.com"}],"time":{"0.0.1":"2011-10-10T19:30:04.833Z","0.1.0":"2011-10-11T01:01:30.698Z","0.1.1":"2011-11-08T18:39:43.002Z","0.1.2":"2011-11-13T23:26:28.255Z","0.1.3":"2011-11-16T23:29:22.539Z","0.1.4":"2011-12-01T13:52:04.705Z","0.2.0":"2012-01-22T20:05:27.812Z","0.2.1":"2012-01-23T00:06:20.302Z","0.3.0":"2012-01-23T23:32:03.908Z","0.3.1":"2012-02-15T18:58:50.897Z","0.4.0":"2012-02-24T20:38:42.517Z","0.5.0":"2012-06-24T03:04:28.413Z","0.6.0":"2012-06-29T18:18:22.364Z","0.7.0":"2012-10-25T21:42:13.430Z","0.7.1":"2012-10-29T12:26:27.274Z"},"author":{"name":"Rafael de Oleza","email":"rafeca@gmail.com","url":"https://github.com/rafeca"},"repository":{"type":"git","url":"https://github.com/rafeca/prettyjson.git"},"users":{"bahamas10":true},"_etag":"\"423JTYQNQADUA776I7BEO62P\""}