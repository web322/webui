[0]
LANGUAGE_NAME=TXT

[1]
LANGUAGE_NAME=PHP
for.sl=for (\$i = 0; \$i < $; ++\$i)\n	$
for.ml=for (\$i = 0; \$i < $; ++\$i)\n{\n	$\n}
foreach.sl=foreach (\$$ as \$k => \$v)\n	$
foreach.ml=foreach (\$$ as \$k => \$v)\n{\n	$\n}
function.public=public function $($)\n{\n	$\n}
function.protected=protected function $($)\n{\n	$\n}
function.private=private function $($)\n{\n	$\n}
function.public.static=public static function $($)\n{\n	$\n}
function.protected.static=protected static function $($)\n{\n	$\n}
function.private.static=private static function $($)\n{\n	$\n}

[2]
LANGUAGE_NAME=C
case=case $: $\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$

[3]
LANGUAGE_NAME=CPP
case=case $: $\n$
class=class $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n$
def=#define $\n$
default=default $: $\n$
dowhile=do\n{\n	$\n}\nwhile ($);\n$
dowhiles=do\n	$\nwhile ($);\n$
else=else\n{\n	$\n}\n$
elseif=else if ($)\n{\n	$\n}\n$
elseifs=else if ($)\n	$\n$
elses=else\n	$\n$
for=for ($;$;$)\n{\n	$\n}\n$
fors=for ($;$;$)\n	$\n$
func=$ $($)\n{\n	$\n	return $;\n}\n$
hclass=#ifndef $\n#define $\n\nclass $ {\nprivate:\n	$\nprotected:\n	$\npublic:\n	$\n};\n\n#endif\n$
if=if ($)\n{\n	$\n}\n$
ifelse=if ($)\n{\n	$\n}\nelse\n{\n	$\n}\n$
ifelses=if ($)\n{\n	$\n}\nelse\n	$\n$
ifs=if ($)\n	$\n$
ifselse=if ($)\n	$\nelse\n{\n	$\n}\n$
ifselses=if ($)\n	$\nelse\n	$\n$
inc=#include <$>\n$
incl=#include "$"\n$
main=int main(int argc, char* argv[])\n{\n	$\n}\n
switch=switch ($)\n{\n	$\n}\n$
while=while ($)\n{\n	$\n}\n$
whiles=while ($)\n	$\n$

[4]
LANGUAGE_NAME=CS

[5]
LANGUAGE_NAME=OBJC

[6]
LANGUAGE_NAME=JAVA

[7]
LANGUAGE_NAME=RC

[8]
LANGUAGE_NAME=HTML

[9]
LANGUAGE_NAME=XML

[10]
LANGUAGE_NAME=MAKEFILE

[11]
LANGUAGE_NAME=PASCAL

[12]
LANGUAGE_NAME=BATCH

[13]
LANGUAGE_NAME=INI

[14]
LANGUAGE_NAME=NFO

[15]
LANGUAGE_NAME=USER

[16]
LANGUAGE_NAME=ASP

[17]
LANGUAGE_NAME=SQL

[18]
LANGUAGE_NAME=VB

[19]
LANGUAGE_NAME=JS
for.sl=for (var i = 0; i < $; ++i)\n	$
for.ml=for (var i = 0; i < $; ++i)\n{\n	$\n}
foreach.sl=for (var x in $)\n	$
foreach.ml=for (var x in $)\n{\n	$\n}

[20]
LANGUAGE_NAME=CSS

[21]
LANGUAGE_NAME=PERL

[22]
LANGUAGE_NAME=PYTHON

[23]
LANGUAGE_NAME=LUA

[24]
LANGUAGE_NAME=TEX

[25]
LANGUAGE_NAME=FORTRAN

[26]
LANGUAGE_NAME=BASH

[27]
LANGUAGE_NAME=FLASH

[28]
LANGUAGE_NAME=NSIS

[29]
LANGUAGE_NAME=TCL
else=} else {\n $
foreach=foreach $ $ {\n $\n}\n$
if=if { $ } {\n $\n}\n$
ifelse=if { $ }\n $\n} else {\n $\n}
proc=# $\nproc $ { $ } {\n $\n}\n$
regsub=regsub -all {$} "$" {$} $\n$

[30]
LANGUAGE_NAME=LISP

[31]
LANGUAGE_NAME=SCHEME

[32]
LANGUAGE_NAME=ASM

[33]
LANGUAGE_NAME=DIFF

[34]
LANGUAGE_NAME=PROPS

[35]
LANGUAGE_NAME=PS

[36]
LANGUAGE_NAME=RUBY

[37]
LANGUAGE_NAME=SMALLTALK

[38]
LANGUAGE_NAME=VHDL
Ris=Rising_Edge ( $ )$
access=type $ is access $;\n$
alias=alias $ is $;\n$
archi=architecture $ of $ is\n$\nbegin\n$\nend $;\n$
array=type $ is\n array ( $ ) of $;\n$
assert=assert ( $ )\n report "$"\n sevrity $;\n$
block=$ : block $\nbegin\n $\nend block $;\n$
case=case $ is\n when $ =>\n $;\n when others =>\n $;\nend case;\n$
com=--\n-- $\n--
component=component $\n port (\n $\n );\nend component $;\n$
config=for $ : $\n use $\n $;\n$
constant=constant $: $;\n$
elsif=elsif ( $ ) then\n $;
entity=entity $ is\n port (\n $\n );\nend $;\n$
enum=type $ is ( $, $ );
exit=exit $ when $;\n$
file=file $ : $ is $;\n$
for=$ : for $ in $ downto $ loop\n $;\nend loop $;\n$
function=function (\n $\n )return $ is\n $\nbegin\n $\nend $;
functiond=function $ (\n $\n) return $;\n$
geneif=$ : if ( $ = $ ) generate\n $\nbegin\n $\nend generate $;
generate=$ : for $ in $ downto $ generate\n $\nbegin\n $\nend generate $;\n$
generic=generic (\n $\n );\n$
genmap=generic map (\n $\n)\n$
group=group $ is ( $ );\n$
ieee=library ieee;\n use ieee.std_logic_1164.all;\n $
if=if ( $ ) then\n $;\n$end if;\n$
ifelse=if ( $ ) then\n $\nelse\n $\nend if;\n$
ifelsif=if ( $ ) then\n $\nelsif ( $ )\n $\nend if;\n$
loop=$ : loop\n $\nend loop;\n$
map=$ : $\n port map (\n $\n );\n$
mapgen=$ : $\n generic map (\n $\n )\n port map (\n $\n );\n$
next=$ : next $ when $;\n$
numeric=use ieee.numeric_std.all;\n$
pack=package $ is\n $\nend package $;\n\npackage body $ is\n $\nend package body $;\n$
port=port (\n $\n );\n$
procedure=procedure $ (\n $\n ) is\n$\nbegin\n $\nend procedure $;\n$
procedured=procedure $ (\n $\n);\n$
process=$ : process ( $ )\nbegin\n $\nend process $;\n$
proclk=$ : process ( $, $ )\n begin\n if ( $ = '$' ) then\n $ <= $;\n elsif( Rising_Edge( $ ) ) then\n $\n end if;\nend process $;
protected=protected\n $\nend protected ;
record=type $ is\n record\n $ : $ ;\nend record $;\n$
start=library ieee;\n use ieee.std_logic_1164.all;\n\nentity $ is\n port (\n $\n );\nend $;\n\narchitecture $ of $ is\n$\nbegin\n$\nend $;\n$
std=signal $ : std_logic$;\n$
stdpi=$ : in std_logic;\n$
stdpio=$ : inout std_logic;\n$
stdpo=$ : out std_logic;\n$
stdtextio=use ieee.std_logic_textio.all;\n$
stdv=signal $ : std_logic_vector( $ downto 0);\n$
stdvar=variable $ : std_logic;\n$
stdvpi=$ : in std_logic_vector( $ downto $);\n$
stdvpio=$ : inout std_logic_vector( $ downto $);\n$
stdvpo=$ : out std_logic_vector( $ downto $);\n$
stdvvar=variable $ : std_logic_vector( $ downto 0);\n$
subtype=subtype $ is $;\n$
textio=use std.textio.all;\n$
units=units\n $;\nend units;\n$
waitf=wait for $;\n$
waitu=wait until $;\n$
waituf=wait until $ for $;\n$
when=when $ =>\n $;$
whene=when ( $ ) else $;
while=$ : while $ loop\n $;\nend loop;\n$
x=x"$"$

[39]
LANGUAGE_NAME=KIX

[40]
LANGUAGE_NAME=AU3

[41]
LANGUAGE_NAME=CAML

[42]
LANGUAGE_NAME=ADA

[43]
LANGUAGE_NAME=VERILOG

[44]
LANGUAGE_NAME=MATLAB

[45]
LANGUAGE_NAME=HASKELL

[46]
LANGUAGE_NAME=INNO

[47]
LANGUAGE_NAME=SEARCHRESULT

[48]
LANGUAGE_NAME=CMAKE

[49]
LANGUAGE_NAME=YAML

[50]
LANGUAGE_NAME=EXTERNAL

[255]
a-id=<a id="$" href="$">$</a>
b=<b>$</b>
body=<body>\n	$\n</body>\n$
body-id=<body id="$">\n	$\n</body>\n$
br=<br />
color.black=#000000
color.blue=#0000FF
color.cyan=#00FFFF
color.green=#00FF00
color.grey=#C0C0C0
color.mangenta=#FF00FF
color.white=#FFFFFF
color.yellow=#FFFF00
comment=<!-- $ -->\n$
div-class=<div class="$">\n</div>
div-id=<div id="$">\n</div>
div-id-class=<div id="$" class="$">\n	$\n</div>
div.p=<div class="p">\n	$\n</div>
doctype.html.4.loose=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"\n	"http://www.w3.org/TR/html4/loose.dtd">
doctype.html.4.strict=<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"\n	"http://www.w3.org/TR/html4/strict.dtd">
doctype.xhtml.1.0.loose=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"\n	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
doctype.xhtml.1.0.strict=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"\n	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
doctype.xhtml.1.1=<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"\n	"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
fieldset=<fieldset class="$">\n	$\n</fieldset>
form=<form name="$" action="$">\n	$\n</form>\n$
h1=<h1>$</h1>
h2=<h2>$</h2>
h3=<h3>$</h3>
h4=<h4>$</h4>
h5=<h5>$</h5>
h6=<h6>$</h6>
head=<head>\n	$\n</head>\n$
html-body=<html>\n<head>\n		<title>$</title>\n	$\n	</head>\n	<body>\n	$\n	</body>\n</html>
i=<i>$</i>$
img=<img src="$" alt="$" />\n$
input=<input type="$" name="$" />\n$
li=<li>$</li>
lil=<li>\n	$\n</li>
link=<a href="$">$</a>$
ol=<ol>\n	<li>$</li>\n</ol>
p=<p>\n	$\n</p>
pre=<pre>$</pre>\n$
pre-class=<pre class="$">\n	$\n</pre>
prel=<pre>\n	$\n</pre>
span=<span>$</span>
table-id=<table id="$">\n	<tr>\n		<td id="$">\n			$\n		</td>\n	</tr>\n</table>
td=\n<td>\n	$\n</td>
title=<title>$</title>\n$
tr=\n<tr>\n	$\n</tr>
ul=<ul>\n	<li>$</li>\n</ul>
url=http://
www=http://www.